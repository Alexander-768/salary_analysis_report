# -*- coding: utf-8 -*-
"""Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_5NLGrEqc83Ik5Ry1dJDODvY8_usBIAK

#Загрузка и обработка данных (создание витрин данных)

Для начала загрузим данные об инфляции
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df_of_inflantion = pd.read_csv('inflation.csv', sep=';') # датафрейм с инфляцией

"""Данные о зарплатах по отраслям отражены в двух листах. Выберем следующи категории:
*   Образование
*   Добыча полезных ископаемых
*   Строительство


и преобразуем данные в один датафрейм.

"""

# читаем данные с двух листов
df_of_wages_from_2017 = pd.read_excel('tab3-zpl_2024.xlsx', sheet_name='с 2017 г.') # датафрейм с зарплатами по отраслям c 2017 по 2024
df_of_wages_from_2000 = pd.read_excel('tab3-zpl_2024.xlsx', sheet_name='2000-2016 гг.') # датафрейм с зарплатами по отраслям c 2000 по 2016

"""## Преобразование датафрейма с данными с 2017 года"""

df_of_wages_from_2017.dropna(inplace=True) # убираем строки с пропусками
df_of_wages_from_2017['Unnamed: 0'] = df_of_wages_from_2017['Unnamed: 0'].apply(lambda x: x.lower().strip()) # приводим столбцы с отраслями к единому формату(без пробелов в нижнем регистре)

# находим нужные нам отрасли
mine_branches_2017 = df_of_wages_from_2017[(df_of_wages_from_2017['Unnamed: 0'] == 'образование') | (df_of_wages_from_2017['Unnamed: 0'] == 'добыча полезных ископаемых')  | (df_of_wages_from_2017['Unnamed: 0'] == 'строительство') ]

"""## Преобразование датафрейма с данными с 2000 года"""

df_of_wages_from_2000.dropna(inplace=True) # убираем строки с пропусками
df_of_wages_from_2000['Unnamed: 0'] = df_of_wages_from_2000['Unnamed: 0'].apply(lambda x: x.lower().strip()) # приводим столбцы с отраслями к единому формату(без пробелов в нижнем регистре)
# находим нужные нам отрасли

mine_branches_2000 = df_of_wages_from_2000[(df_of_wages_from_2000['Unnamed: 0'] == 'образование') | (df_of_wages_from_2000['Unnamed: 0'] == 'добыча полезных ископаемых')  | (df_of_wages_from_2000['Unnamed: 0'] == 'строительство') ]
mine_branches_2000

mine_branches_2017

# переименуем первый столбец
mine_branches_2017.rename(columns={'Unnamed: 0': 'Отрасль'}, inplace=True)
mine_branches_2000.rename(columns={'Unnamed: 0': 'Отрасль'}, inplace=True)
# объеденим данные в один датафрейм
wages = mine_branches_2000.merge(mine_branches_2017, on='Отрасль')
wages

"""# Визуализация динамики зарплат по отраслям"""

# Делаем "Отрасль" индексом и транспонируем
df = wages.set_index("Отрасль").T
fig_0, ax = plt.subplots(figsize=(10, 6))  # fig - фигура, ax - оси

# 2. Строим графики на созданных осях
ax.plot(df.index, df['добыча полезных ископаемых']/1000, label='Добыча полезных ископаемых')
ax.plot(df.index, df['строительство']/1000, label='Строительство')
ax.plot(df.index, df['образование']/1000, label='Образование')

ax.set_xlabel("Год")
ax.set_ylabel("Зарплата в тыс. руб")
ax.set_title("Динамика зарплат по отраслям (2000-2024)")
ax.legend()
ax.grid(True)

"""## Вывод по графику

Заметим, что спустя 24 года зарплаты в  добывающей промышленности выросоли очень сильно (почти в 10 раз). Образование и строительство тоже имеет рост, но более раземеренный и, в целом, отношение зарплат этих двух отраслей оставалось стабильным, до 2022 года. После 2022 зарплаты в строительной отрасли начали расти быстрее.

# Зарплаты по отраслям с учетом инфляции

Как считать реальную ЗП?


Для начала создадим новый датафрейм - витрину данных для этого задания
"""

df.columns.name = None
df.index.name = 'Год'
df = df.reset_index()
df

inflation_by_year = df_of_inflantion[['Год', 'Всего']] # убрали 2025 год и все что раньше 2000, тк данные по зп только за 2000-2024

inflation_by_year

df = df.merge(inflation_by_year, on='Год').rename(columns={'Всего': 'Инфляция'})
df

"""## Нахождение индекса цен для каждого года"""

base_year = 2000 # базовый год
df["CPI"] = None
df.loc[df['Год'] == base_year, 'CPI'] = 1 # ценовой индекс базовго года равен 1

for i in range(1, len(df)):
  prev_CPI = df.loc[i-1, 'CPI']
  inflation = df.loc[i, 'Инфляция' ]
  new_CPI = prev_CPI *(1 + inflation/100)
  df.loc[i, 'CPI'] = new_CPI

df

df['добыча полезных ископаемых (реальная з/п)'] = df['добыча полезных ископаемых'] / df['CPI']
df['строительство (реальная з/п)'] = df['строительство'] / df['CPI']
df['образование (реальная з/п)'] = df['образование'] / df['CPI']
df

"""Теперь посчитаем процентное изменение реальной и номинальной з/п"""

for name in ['добыча полезных ископаемых', 'строительство', 'образование']:
  df[name + '(номинальное изменение)'] = df[name].pct_change()*100 # процентное изменение в номинале
  df[name + '(реальное изменение)'] = df[name + ' (реальная з/п)'].pct_change() * 100  # Реальное изменение (с учетом инфляции)



df

"""Выберем только нужные данные




"""

# Выберем столбцы с процентным изменением
analysis_cols = ['Год'] + [col for col in df.columns if 'изменение' in col]
#создадим новый датафрейм
new_df = df[analysis_cols]
new_df.head()

"""# Визуализация

Посмотрим на то, как менялась реальная з/п по каждой отрасли
"""

fig_1, ax = plt.subplots(figsize=(12, 6))
for i in ['добыча полезных ископаемых', 'строительство', 'образование']:
    #ax.plot(df['Год'], df[i],
     #       label=f'{i} (номинальная)', marker='o')
    ax.plot(df['Год'], df[i +' (реальная з/п)'], label=f'{i} (реальная)', linestyle='--', marker='x' )









# Настройки графика
ax.set_title('Общий график изменения зарплат с учетом инфляции')
ax.set_xlabel('Год')
ax.set_ylabel('з/п в абсолютном значении')
ax.legend()
ax.grid(True)
#plt.xticks(df['Год'])
#plt.tight_layout()
plt.show()

"""А насколько процентов по итогу выросла з/п в каждой области?"""

for branch in ['добыча полезных ископаемых', 'строительство', 'образование']:
    salary_in_2000 = df.loc[0, branch + ' (реальная з/п)']
    salary_in_2024 = df.loc[24, branch + ' (реальная з/п)']
    devide = round(salary_in_2024/salary_in_2000, 2)
    percent_change = round(((salary_in_2024 - salary_in_2000) / salary_in_2000)* 100)

    print(f"Зарплата в отрасли '{branch}' выросла в {devide} раз(-а). То есть на {percent_change} %")
    print()

"""Посмотрим в какой отрасли был самый стабильный и устойчивый рост"""

fig_2, ax = plt.subplots(figsize=(12, 6))
for column in ['добыча полезных ископаемых', 'строительство', 'образование']:
    #ax.plot(new_df['Год'], new_df[column+'(номинальное изменение)'],
     #       label=f'{column} (номинальная)', marker='o')

    ax.plot(new_df['Год'], new_df[column+'(реальное изменение)'],
            label=f'{column} (реальная)')






# Настройки графика
ax.set_title('Изменение зарплат с учетом инфляции')
ax.set_xlabel('Год')
ax.set_ylabel('Изменение, %')
ax.legend()
ax.grid(True)
#plt.xticks(new_df['Год'])
#plt.tight_layout()
plt.show()

"""Заметим, что в целом изменения в процентах достаточно волатильны в каждой отрасли. Также можно проследить спады в 2008(мировой кризис), 2015(санкционное влияние после присоединения Крыма), 2020 (COVID-19)"""